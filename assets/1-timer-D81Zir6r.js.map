{"version":3,"file":"1-timer-D81Zir6r.js","sources":["../../src/js/helpers/timer-functions.js","../../src/js/1-timer.js"],"sourcesContent":["export function addLeadingZero(value) {\n  return String(value).padStart(2, '0'); //додаєм \"0\" вперед одинарної цифри\n\n  // return value < 10 ? `0${value}` : value;\n}\n\n//конвертація мілісекунд--------------------------------------------------------------\n\nexport function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nexport const timerDay = document.querySelector('[data-days]');\nexport const timerHour = document.querySelector('[data-hours]');\nexport const timerMinute = document.querySelector('[data-minutes]');\nexport const timerSecond = document.querySelector('[data-seconds]');\n","//! Напиши скрипт таймера, який здійснює зворотний відлік до певної дати.\n//* оголоси поза межами методу let змінну, наприклад, userSelectedDate, і після валідації її в методі onClose() на минуле/майбутнє запиши обрану дату в цю let змінну.\n\n//* Якщо користувач вибрав дату в минулому, покажи window.alert() з текстом \"Please choose a date in the future\" і зроби кнопку «Start» не активною.\n//* Якщо користувач вибрав валідну дату (в майбутньому), кнопка «Start» стає активною.\n\n//* Кнопка «Start» повинна бути неактивною доти, доки користувач не вибрав дату в майбутньому. Зверни увагу, що при обранні валідної дати, не запуску таймера і обранні потім невалідної дати, кнопка після розблокування має знову стати неактивною.\n// *Натисканням на кнопку «Start» починається зворотний відлік часу до обраної дати з моменту натискання.\n\n// *Відлік часу:\n//* Натисканням на кнопку «Start» скрипт повинен обчислювати раз на секунду, скільки часу залишилось до вказаної дати, і оновлювати інтерфейс таймера, показуючи чотири цифри: дні, години, хвилини і секунди у форматі xx:xx:xx:xx.\n\n//* Кількість днів може складатися з більше, ніж двох цифр.\n//* Таймер повинен зупинятися, коли дійшов до кінцевої дати, тобто залишок часу дорівнює нулю 00:00:00:00.\n\n// *Після запуску таймера натисканням кнопки Старт кнопка Старт і інпут стають неактивним, щоб користувач не міг обрати нову дату, поки йде відлік часу. Якщо таймер запущений, для того щоб вибрати нову дату і перезапустити його — необхідно перезавантажити сторінку.\n\n//* Форматування часу:\n//* Функція convertMs() повертає об'єкт з розрахованим часом, що залишився до кінцевої дати. Зверни увагу, що вона не форматує результат. Тобто якщо залишилося 4 хвилини або будь-якої іншої складової часу, то функція поверне 4, а не 04. В інтерфейсі таймера необхідно додавати 0, якщо в числі менше двох символів. Напиши функцію, наприклад addLeadingZero(value), яка використовує метод рядка padStart() і перед відмальовуванням інтерфейсу форматує значення.\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n//----------------------------------------------------------------------------------\nimport {\n  addLeadingZero,\n  convertMs,\n  timerDay,\n  timerHour,\n  timerMinute,\n  timerSecond,\n} from './helpers/timer-functions.js';\n\n//----------------------------------------------------------------------------------\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('.start-btn');\n// const timerDay = document.querySelector('[data-days]');\n// const timerHour = document.querySelector('[data-hours]');\n// const timerMinute = document.querySelector('[data-minutes]');\n// const timerSecond = document.querySelector('[data-seconds]');\n\nstartButton.addEventListener('click', startTimer);\n\nlet userSelectedDate;\nlet timerInterval;\n\n//налаштування flatppickr------------------------------------------------------------\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0]; // Отримуємо обрану дату\n    const currentDate = new Date();\n\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n\n        messageColor: '#FFF',\n        titleColor: '#FFF',\n\n        backgroundColor: '#ef4040',\n        borderBottom: '2px solid #ffbebe',\n        borderRadius: '4px',\n        padding: '20px',\n        width: '302px',\n        height: '64px',\n        timeout: 5000, // Время отображения\n      });\n\n      // window.alert('Please choose a date in the future');\n\n      startButton.disabled = true; // Вимикаємо кнопку\n    } else {\n      startButton.disabled = false; // Активуємо\n    }\n    // console.log(selectedDates[0]);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\n//відображення таймера(скільки лишилось часу)---------------------------------\nfunction timerUpdate(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  timerDay.textContent = addLeadingZero(days);\n  timerHour.textContent = addLeadingZero(hours);\n  timerMinute.textContent = addLeadingZero(minutes);\n  timerSecond.textContent = addLeadingZero(seconds);\n}\n//-------------------------------------------------------------------------------------\n\nstartButton.disabled = true; // робимо кнопку на початку неактивною\n\nfunction startTimer() {\n  // Робимо кнопку та поле вибору дати неактивними після кліку\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n\n  // Визначаємо різницю у часі\n  const currentDate = new Date();\n  const timeDiff = userSelectedDate - currentDate;\n\n  // Оновлюємо таймер кожну секунду\n  timerInterval = setInterval(() => {\n    // Визначаємо різницю у часі\n    const currentDate = new Date();\n    const timeDiff = userSelectedDate - currentDate;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerInterval);\n      timerUpdate(0); // Відображаємо 00:00:00:00\n\n      startButton.disabled = false; // знову активно\n      datetimePicker.disabled = false; // знову активно\n    }\n\n    timerUpdate(timeDiff);\n\n    // console.log(timeDiff);\n  }, 1000);\n\n  timerUpdate(timeDiff);\n\n  //зупиняємо таймер, коли вже 0\n  if (timeDiff <= 0) {\n    clearInterval(timerInterval);\n\n    timerUpdate(0); // Відображаємо 00:00:00:00\n    startButton.disabled = false; // знову активно\n    datetimePicker.disabled = false;\n  }\n}\n\n//-----------------------------------------------------------------------------------\n"],"names":["addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","timerDay","timerHour","timerMinute","timerSecond","datetimePicker","startButton","startTimer","userSelectedDate","timerInterval","options","selectedDates","iziToast","flatpickr","timerUpdate","timeDiff"],"mappings":"gDAAO,SAASA,EAAeC,EAAO,CACpC,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CAGtC,CAIO,SAASC,EAAUC,EAAI,CAO5B,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAMO,MAAMC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EC7BlE;AAqCA,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,YAAY,EAMvDA,EAAY,iBAAiB,QAASC,CAAU,EAEhD,IAAIC,EACAC,EAGJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAG9BH,EAFgB,IAAI,MAGtBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCAET,aAAc,OACd,WAAY,OAEZ,gBAAiB,UACjB,aAAc,oBACd,aAAc,MACd,QAAS,OACT,MAAO,QACP,OAAQ,OACR,QAAS,GACjB,CAAO,EAIDN,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAG1B,CACH,EAEAO,EAAU,mBAAoBH,CAAO,EAGrC,SAASI,EAAYlB,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUC,CAAE,EAEtDK,EAAS,YAAcR,EAAeI,CAAI,EAC1CK,EAAU,YAAcT,EAAeK,CAAK,EAC5CK,EAAY,YAAcV,EAAeM,CAAO,EAChDK,EAAY,YAAcX,EAAeO,CAAO,CAClD,CAGAM,EAAY,SAAW,GAEvB,SAASC,GAAa,CAEpBD,EAAY,SAAW,GACvBD,EAAe,SAAW,GAI1B,MAAMU,EAAWP,EADG,IAAI,KAIxBC,EAAgB,YAAY,IAAM,CAGhC,MAAMM,EAAWP,EADG,IAAI,KAGpBO,GAAY,IACd,cAAcN,CAAa,EAC3BK,EAAY,CAAC,EAEbR,EAAY,SAAW,GACvBD,EAAe,SAAW,IAG5BS,EAAYC,CAAQ,CAGrB,EAAE,GAAI,EAEPD,EAAYC,CAAQ,EAGhBA,GAAY,IACd,cAAcN,CAAa,EAE3BK,EAAY,CAAC,EACbR,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE9B"}